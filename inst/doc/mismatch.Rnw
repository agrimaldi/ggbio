%\VignetteIndexEntry{How to make a mismatch summary plot}
%\VignetteDepends{}
%\VignetteKeywords{visualization utilities}
%\VignettePackage{ggbio}
\documentclass[10pt]{article}

% \usepackage{times}
\usepackage{hyperref}
\usepackage{verbatim}
\usepackage{graphicx}

\textwidth=6.5in
\textheight=8.5in
\parskip=.3cm
\parindent = 0cm
\oddsidemargin=-.1in
\evensidemargin=-.1in
\headheight=-.3in



\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}

\newcommand{\software}[1]{\textsf{#1}}
\newcommand{\R}{\software{R}}
\newcommand{\Bioc}{\software{Bioconductor}}
\newcommand{\IRanges}{\Rpackage{IRanges}}
\newcommand{\biovizBase}{\Rpackage{biovizBase}}
\newcommand{\ggbio}{\Rpackage{ggbio}}
\newcommand{\visnab}{\Rpackage{visnab}}
\newcommand{\ggplot}{\Rpackage{ggplot2}}
\newcommand{\grid}{\Rpackage{grid}}
\newcommand{\gridExtra}{\Rpackage{gridExtra}}
\newcommand{\qplot}{\Rfunction{qplot}}
\newcommand{\autoplot}{\Rfunction{autoplot}}

\title{How to make a mismatch summary plot}
\author{Tengfei Yin}
\date{\today}

\setkeys{Gin}{width=0.65\textwidth}
\begin{document}
\maketitle
\tableofcontents
\section{Introduction}
\Rfunction{stat\_mismatch} is lower level API to read in a bam file and show
mismatch summary for certain region, counts at each position are summarized,
those reads which are identical as reference will be either shown as gray
background or removed, it's controled by argument `show.coverage`, mismatched
part will be shown as color-coded bar or segment.

Objects supported:
\begin{itemize}
\item \Robject{Bamfile}
\item \Robject{GRanges}. this will pass interval checking which make sure the
  GRanges has required columns.
\end{itemize}

\section{Usage}
\subsection{Low level API: \Rfunction{stat\_mismatch}}
Load packages
@ 
<<load>>=
library(ggbio)
library(BSgenome.Hsapiens.UCSC.hg19)
data("genesymbol", package = "biovizBase")
@ %def 

Load example bam file
@ 
<<load_bam>>=
bamfile <- system.file("extdata", "SRR027894subRBM17.bam", package="biovizBase")
library(Rsamtools)
bf <- BamFile(bamfile)
@ %def 

If the object is \Robject{BamFile}, a \Robject{BSgenome} object is required to
compute the mismatch summary. in the following code,
\Rfunction{coord\_cartesian} function is a \ggplot{} function which zoom in/out,
function \Rfunction{theme\_bw} is a customized theme in \ggplot{} which will give
you a grid and white background.
\begin{figure}[!htpb]
  \centering
@ 
<<BamFile, fig = TRUE>>=
ggplot() + stat_mismatch(bf, which = genesymbol["RBM17"],
                         bsgenome = Hsapiens,show.coverage = TRUE) +
  coord_cartesian(xlim = c(6134000, 6135000)) + theme_bw()
@ %def   
  \caption{Mismatch summary for gene RBM17. Background is coverage shown as gray
  color, and only mismatched reads are shown with different color.}
  \label{fig:bamfile}
\end{figure}
\clearpage

Sometimes bam file and \Robject{BSgenome} object might have a different naming
schema for chromosomes, currently, \Rfunction{stat\_mismatch} is not smart enough
to deal with complicated cases, in this way, you may want to get mismatch
summary as \Robject{GRanges} yourself and correct the names, with
\Rfunction{keepSeqlevels} or \Rfunction{renamesSeqleves} functions in package
\Rpackage{GenomicRanges}. Following examples doesn't show you how to manipulate
seqnames, but just show you how to compute mismatch summary.  

@ 
<<pag>>=
library(biovizBase)
pgr <- pileupAsGRanges(bamfile, region = genesymbol["RBM17"])
pgr.match <- pileupGRangesAsVariantTable(pgr, genome = Hsapiens)
@ %def 

And directly plot the mismatch \Robject{GRanges} object, at the same time hide
coverage background.
\begin{figure}[!htpb]
  \centering
@ 
<<pag_v, fig = TRUE>>=
ggplot() + stat_mismatch(pgr.match)
@ %def   
  \caption{Mismatch summary without coverage}
  \label{fig:pag_v1}
\end{figure}
\clearpage 

Then we compare geom 'bar' and 'segment', 'bar' is useful when zoomed in to a
small region.
\begin{figure}[!htpb]
  \centering
@ 
<<pag_v2, fig = TRUE>>=
p1 <- ggplot() + stat_mismatch(pgr.match, show.coverage = FALSE, geom = "bar") +
  xlim(6132060,6132120) + ylim(0, 10)
p2<- ggplot() + stat_mismatch(pgr.match, geom = "segment") +
  xlim(6132060,6132120) + ylim(0, 10)
tracks(segment = p2, bar = p1) +scale_x_sequnit('mb')
@ %def    
  \caption{Mismatch summary without coverage}
  \label{fig:pag_v2}
\end{figure}
\clearpage

\subsection{autoplot}
\autoplot{} for object \Robject{Bamfile} have a statistical transformation
called \textit{mismatch}, this is a wrapper over lower level function
\Rfunction{stat\_mismatch}.
\begin{figure}[!htpb]
  \centering
@ 
<<autoplot, fig = TRUE>>=
autoplot(bf, which = genesymbol["RBM17"], 
         bsgenome = Hsapiens,show.coverage = TRUE, 
         stat = "mismatch", geom = "bar") +   xlim(6132060,6132120) + ylim(0, 10)
@ %def   
  \caption{autoplot API to show the same plot}
  \label{fig:autoplot}
\end{figure}

\clearpage
\section{Trouble shooting}
Please keep in mind, \Rfunction{xlim} or \Rfunction{ylim} function will cut
values outside the specified range.  If you come across problem showing coverage
background at the same time zoomed in the view, please use
\Rfunction{coord\_cartesian} to make sure it's just simply zoom in/out.

\section{sessionInfo}
@ 
<<sessionInfo>>=
sessionInfo()
@ %def 



\end{document}
