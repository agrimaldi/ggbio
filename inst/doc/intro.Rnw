%\VignetteIndexEntry{An Introduction to ggbio}
%\VignetteDepends{}
%\VignetteKeywords{visualization utilities}
%\VignettePackage{ggbio}
\documentclass[10pt]{article}

% \usepackage{times}
\usepackage{hyperref}
\usepackage{verbatim}
\usepackage{graphicx}


\setkeys{Gin}{width=0.95\textwidth}

\textwidth=6.5in
\textheight=8.5in
\parskip=.3cm
\parindent = 0cm
\oddsidemargin=-.1in
\evensidemargin=-.1in
\headheight=-.3in

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}

\newcommand{\software}[1]{\textsf{#1}}
\newcommand{\R}{\software{R}}
\newcommand{\Bioc}{\software{Bioconductor}}
\newcommand{\IRanges}{\Rpackage{IRanges}}
\newcommand{\biovizBase}{\Rpackage{biovizBase}}
\newcommand{\ggbio}{\Rpackage{ggbio}}
\newcommand{\visnab}{\Rpackage{visnab}}
\newcommand{\ggplot}{\Rpackage{ggplot2}}
\newcommand{\grid}{\Rpackage{grid}}
\newcommand{\gridExtra}{\Rpackage{gridExtra}}
\newcommand{\qplot}{\Rfunction{qplot}}
\newcommand{\autoplot}{\Rfunction{autoplot}}

\title{An Introduction to \ggbio{}}
\author{Tengfei Yin}
\date{\today}


\begin{document}
\setkeys{Gin}{width=0.6\textwidth}
\maketitle
\newpage
\tableofcontents
\newpage


<<options,echo=FALSE>>=
options(width=72)
@
\section{Introduction}
A mature graphic eco-system always has a well-developed data model, a grammar
and a powerful computing platform. Grammar of graphics\footnote{``The grammar of
  graphics'' by Leland Wilkinson} is the essential part to help people
understand the underlying data by using a general visualization
framework. What's more, object-oriented graphics is especially useful for a
well-developed infrastructure system that have carefully defined data model to
store specific data sets for special purpose. Let's say, given a
\Robject{GRanges} we know it represents annotated genetic intervals, given
\Robject{TranscriptDb} we know it represents transcripts-centric annotation
data, given \Robject{matrix}, in biology, we probably expect a heatmap.

Let's scrutinize what we have in R:
\begin{itemize}
\item \textbf{data model}: \Bioc{} tries hard to define and generalize
  infrastructure for storing particular biological data. For example, we have
  \Rclass{ExpressionSet} to store microarray data, we have
  \Rclass{GappedAlignments} to store NGS alignments, and \Rclass{IRanges} to
  represent numeric intervals. This is especially useful, which make
  object-oriented programming for specific biological questions much easier, and
  make object-oriented visualization possible in \Bioc{} too. 
\item \textbf{Powerful computing platform}: \R{} is a modern statistical
  computing environment, provides plenty of models and computing method for
  multivariate data analysis, at the same time, \Bioc{} has numerous data mining
  tools in genetic analysis and other fields. These well-developed and tested
  tool kits make processing and analysis easier than before. And we have to pay
  attention to that many useful graphics are just statistical summary of raw
  data, so statistical transformation exists could be implemented as part of the
  visualization procedure.
\item \textbf{The grammar of graphics}: This conceptual framework is proposed by
  Leland Wilkinson\footnote{Please check Wilkinson's book ``The grammar of
    graphics'' for more detail.}. Hadley Wickham extended the grammar and also
  first implemented it in \R{} in his package \Rpackage{ggplot2} with great
  success. \ggbio{} is built on \ggplot2{} and extends the grammar to genomic
  data with new features and extended components.
\end{itemize}

\section{Grammar of graphics(gog)}
To introduce the usage of \Rfunction{autoplot} function, we need to get an idea
about grammar of graphics(GoG), it's basically composed of following components:
\begin{itemize}
\item \textit{Data}: Data you are going to visualize with a set of
  variables, it's usually the first argument passed in function \autoplot{}.
\item \textit{Statistical transformation}: Statistical methods performed on the
  variables of raw data and generate more informative summary. It's usually
  controlled by the parameters \textbf{stat}.
\item \textit{Geometric object}: e.g arrow, rectangle. It's usually controlled
  by the parameters \textbf{geom}.
\item \textit{Coordinate system}: eg Cartesian. It's usually controlled by the
  parameters \textbf{coord}.
\item \textit{Scales}:Transformation of scales, such as logarithm. It's usually
  controlled by the parameters \textbf{scale}.
\item \textit{Facetting}:Subset the data by factors and create small panels for
  each subset of data with same representation of graphics. It's usually
  controlled by the parameters \textbf{facets}.
\end{itemize}  

\section{Overview of \ggbio{}}
What \ggbio{} can do depends on how you are going to utilize those components to
construct your graphics. We tend to keep flexibility as well as convenience of
usage. 

Here is just a quick overview for \ggbio{}'s usage, but not limited to them. You
can find every topic with a tutorial vignette(pdf) distributed with package.

\begin{itemize}
\item \autoplot{} function for object-oriented visualization, which support
  various \Bioc{} core data object, such as \Robject{GRanges, IRanges,
    TranscriptDb, BamFile, GappedAlignment, Seqinfo} etc. Trying to use simplest way to
  bring you highly customized graphics. Please check another vignette
  available with this package. 
\item Visualize genomic features easily from \Robject{TranscriptDb} object.
\item Visualize mismatch summary from bam file.
\item Make ranges linked to data view.
\item Build ideogram(single chromosomes).  
\item Create circular view by using a new layout 'circle'.
\item Create karyogram view by using a new layout 'karyogram'.
\item Create Manhattan plot by using 'genome' coordinate.  
\item How to build tracks easily for existing plots. 
\end{itemize}

\clearpage
\section{On-line documentation}
From this version of \ggbio{}, I am going to move part of documentation and demo
to on-line version, new website is here

http://tengfei.github.com/ggbio

On that website, it contains all documentation and case studies, I will use
knitr + jekyll + github pages to create this website, and still keep the
reproducibility, all markdown examples parse example from the same names, and
build by github into pages, markdown files are under /inst/md\_example, and all
examples R code are under /inst/example.

On-line documentation is google search-able and multi-media friendly, more
flexible for visualization package demonstration.

In the future, since most tutorial has been distributed together with package
itself. We might put only examples for each function to make 'complete' graphics
manual on-line.

\end{document}
