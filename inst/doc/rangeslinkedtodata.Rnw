%\VignetteIndexEntry{How to make a ranges-linked-to-data plot}
%\VignetteDepends{}
%\VignetteKeywords{visualization utilities}
%\VignettePackage{ggbio}
\documentclass[10pt]{article}

% \usepackage{times}
\usepackage{hyperref}
\usepackage{verbatim}
\usepackage{graphicx}

% \SweaveOpts{width = 2.5, height = 2}


\textwidth=6.5in
\textheight=8.5in
\parskip=.3cm
\parindent = 0cm
\oddsidemargin=-.1in
\evensidemargin=-.1in
\headheight=-.3in



\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}

\newcommand{\software}[1]{\textsf{#1}}
\newcommand{\R}{\software{R}}
\newcommand{\Bioc}{\software{Bioconductor}}
\newcommand{\IRanges}{\Rpackage{IRanges}}
\newcommand{\biovizBase}{\Rpackage{biovizBase}}
\newcommand{\ggbio}{\Rpackage{ggbio}}
\newcommand{\visnab}{\Rpackage{visnab}}
\newcommand{\ggplot}{\Rpackage{ggplot2}}
\newcommand{\grid}{\Rpackage{grid}}
\newcommand{\gridExtra}{\Rpackage{gridExtra}}
\newcommand{\qplot}{\Rfunction{qplot}}
\newcommand{\autoplot}{\Rfunction{autoplot}}

\title{How to make a 'ranges-linked-to-data' plot}
\author{Tengfei Yin}
\date{\today}

\setkeys{Gin}{width=0.8\textwidth, height=0.65\textwidth}
\begin{document}
\maketitle
\tableofcontents
\section{Introduction}
Ranges linked data is similar to parallel coordinate plots, could be used to
transform information from sparse or uneven space to uniformed space, then
observe multivariate data change patterns by linking the value within
group. This view is inspired by a view in package \Rpackage{DEXseq}. Here we
generalize it first to \Robject{GRanges} then later other more convenient
object.

Suppose we have a matrix storing expression levels for each exons, each row
indicate the interval, each column indicate the sample. we can store these
values into elementMetadata of \Robject{GRanges} object. 

First we simulated a data like this, suppose we have two samples, named
'sample1' and 'sample2', then we create a column to indicate they are
significant or not, named 'significant' filled with value \Rcode{TRUE/FALSE } or
1/0.
@ 
<<make>>=
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(ggbio)
data(genesymbol, package = "biovizBase")
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
model <- exonsBy(txdb, by = "tx")
model17 <- subsetByOverlaps(model, genesymbol["RBM17"])
exons <- exons(txdb)
exon17 <- subsetByOverlaps(exons, genesymbol["RBM17"])
## reduce to make sure there is no overlap
## just for example
exon.new <- reduce(exon17)
## suppose
set.seed(1)
values(exon.new)$sample1 <- rnorm(length(exon.new), 10, 3)
values(exon.new)$sample2 <- rnorm(length(exon.new), 10, 10)
values(exon.new)$significant <- c(TRUE, rep(FALSE,length(exon.new)-1))
              
head(exon.new)
@ %def 

\Rfunarg{stat.col} accept column names or column index in *element meta data*,
so 1 doesn't mean 'seqnames'.
@
<<link1, fig = TRUE>>=
plotRangesLinkedToData(exon.new, stat.col = 1:2)
## equivilent to 
## plotRangesLinkedToData(exon.new, stat.col = c("sample1", "sample2"))
@ %def 
\clearpage

we can specify line size and type.
@ 
<<link3, fig = TRUE>>=
plotRangesLinkedToData(exon.new, stat.col = 1:2, size = 3, linetype = 4)
@ %
\clearpage

And use argument \Rfunarg{sig} to indicate the column name which stored the
significance bool value, and \Rfunarg{sig.col} indicate the insignificant color
and significant color.
@ 
<<link4, fig = TRUE>>=
plotRangesLinkedToData(exon.new, stat.col = 1:2, size = 3, linetype = 4,
                       sig = "significant", sig.col = c("gray70", "red"))
@ %
\clearpage

\section{sessionInfo}
@ 
<<>>=
sessionInfo()
@ %def 

\end{document}
